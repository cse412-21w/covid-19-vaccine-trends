{"version":3,"sources":["../node_modules/regenerator-runtime/runtime.js","bar-chart.js"],"names":["require","width","height","myDataLocation","svg","d3","select","append","attr","csv","then","data","createChart","ticker","axis","textTween","labels","bars","rank","value","Array","from","names","country","sort","a","b","descending","i","length","Math","min","n","bar","selectAll","transition","date","slice","d","join","enter","color","y","bandwidth","x","prev","get","update","exit","remove","next","call","label","style","text","g","tween","interpolateNumber","t","textContent","formatNumber","margin","top","axisTop","ticks","tickSizeOuter","tickSizeInner","barSize","padding","_","now","formatDate","keyframes","end","right","bottom","left","duration","scaleBand","domain","range","rangeRound","scaleLinear","mapThing","group","countryArray","keys","scaleOrdinal","schemeTableau10","utcFormat","format","k","Set","map","datevalues","rollup","Date","ascending","pairs","ka","kb","push","nameframes","groups","flatMap","Map","console","log","updateBars","updateAxis","updateLabels","updateTicker","node","keyframe","ease","easeLinear"],"mappingsuBAA,OAAO,CAAC,6BAAD,CAAP;;AACA,IAAMC,KAAK,GAAG,GAAd;AACA,IAAMC,MAAM,GAAG,GAAf;;AACA,IAAMC,cAAc,GAAGH,OAAO,CAAC,6BAAD,CAA9B;;AAEA,IAAII,GAAG,GAAGC,EAAE,CAACC,MAAH,CAAU,QAAV,EACLC,MADK,CACE,KADF,EAELC,IAFK,CAEA,SAFA,EAEW,CAAC,CAAD,EAAI,CAAJ,EAAOP,KAAP,EAAcC,MAAd,CAFX,CAAV;AAIAG,EAAE,CAACI,GAAH,CAAON,cAAP,EACKO,IADL,CACU,UAAUC,IAAV,EAAgB;AAClBC,EAAAA,WAAW,CAACD,IAAD,CAAX;AACH,CAHL;;SAKeC;;;;;yEAAf,iBAA2BD,IAA3B;AAAA,qGA0BaE,MA1Bb,EA0CaC,IA1Cb,EA2DaC,SA3Db,EAkEaC,MAlEb,EAmGaC,IAnGb,YA+HaC,IA/Hb;;AAAA;AAAA;AAAA;AAAA;AA+HaA,YAAAA,IA/Hb,kBA+HkBC,KA/HlB,EA+HyB;AACjB,kBAAMR,IAAI,GAAGS,KAAK,CAACC,IAAN,CAAWC,KAAX,EAAkB,UAAAC,OAAO;AAAA,uBAAK;AAAEA,kBAAAA,OAAO,EAAPA,OAAF;AAAWJ,kBAAAA,KAAK,EAAEA,KAAK,CAACI,OAAD;AAAvB,iBAAL;AAAA,eAAzB,CAAb;AACAZ,cAAAA,IAAI,CAACa,IAAL,CAAU,UAACC,CAAD,EAAIC,CAAJ;AAAA,uBAAUrB,EAAE,CAACsB,UAAH,CAAcF,CAAC,CAACN,KAAhB,EAAuBO,CAAC,CAACP,KAAzB,CAAV;AAAA,eAAV;;AACA,mBAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGjB,IAAI,CAACkB,MAAzB,EAAiC,EAAED,CAAnC;AAAsCjB,gBAAAA,IAAI,CAACiB,CAAD,CAAJ,CAAQV,IAAR,GAAeY,IAAI,CAACC,GAAL,CAASC,CAAT,EAAYJ,CAAZ,CAAf;AAAtC;;AACA,qBAAOjB,IAAP;AACH,aApIL;;AAmGaM,YAAAA,IAnGb,kBAmGkBb,GAnGlB,EAmGuB;AACf,kBAAI6B,GAAG,GAAG7B,GAAG,CAACG,MAAJ,CAAW,GAAX,EACLC,IADK,CACA,cADA,EACgB,GADhB,EAEL0B,SAFK,CAEK,MAFL,CAAV;AAIA,qBAAO,iBAAeC,UAAf;AAAA;AAAA,oBAAEC,IAAF;AAAA,oBAAQzB,IAAR;;AAAA,uBAA8BsB,GAAG,GAAGA,GAAG,CACzCtB,IADsC,CACjCA,IAAI,CAAC0B,KAAL,CAAW,CAAX,EAAcL,CAAd,CADiC,EACf,UAAAM,CAAC;AAAA,yBAAIA,CAAC,CAACf,OAAN;AAAA,iBADc,EAEtCgB,IAFsC,CAGnC,UAAAC,KAAK;AAAA,yBAAIA,KAAK,CAACjC,MAAN,CAAa,MAAb,EACJC,IADI,CACC,MADD,EACS,UAAA8B,CAAC;AAAA,2BAAIG,KAAK,CAACH,CAAC,CAACf,OAAH,CAAT;AAAA,mBADV,EAEJf,IAFI,CAEC,QAFD,EAEWkC,CAAC,CAACC,SAAF,EAFX,EAGJnC,IAHI,CAGC,GAHD,EAGMoC,CAAC,CAAC,CAAD,CAHP,EAIJpC,IAJI,CAIC,GAJD,EAIM,UAAA8B,CAAC;AAAA,2BAAII,CAAC,CAAC,CAACG,IAAI,CAACC,GAAL,CAASR,CAAT,KAAeA,CAAhB,EAAmBpB,IAApB,CAAL;AAAA,mBAJP,EAKJV,IALI,CAKC,OALD,EAKU,UAAA8B,CAAC;AAAA,2BAAIM,CAAC,CAAC,CAACC,IAAI,CAACC,GAAL,CAASR,CAAT,KAAeA,CAAhB,EAAmBnB,KAApB,CAAD,GAA8ByB,CAAC,CAAC,CAAD,CAAnC;AAAA,mBALX,CAAJ;AAAA,iBAH8B,EASnC,UAAAG,MAAM;AAAA,yBAAIA,MAAJ;AAAA,iBAT6B,EAUnC,UAAAC,IAAI;AAAA,yBAAIA,IAAI,CAACb,UAAL,CAAgBA,UAAhB,EAA4Bc,MAA5B,GACHzC,IADG,CACE,GADF,EACO,UAAA8B,CAAC;AAAA,2BAAII,CAAC,CAAC,CAACQ,IAAI,CAACJ,GAAL,CAASR,CAAT,KAAeA,CAAhB,EAAmBpB,IAApB,CAAL;AAAA,mBADR,EAEHV,IAFG,CAEE,OAFF,EAEW,UAAA8B,CAAC;AAAA,2BAAIM,CAAC,CAAC,CAACM,IAAI,CAACJ,GAAL,CAASR,CAAT,KAAeA,CAAhB,EAAmBnB,KAApB,CAAD,GAA8ByB,CAAC,CAAC,CAAD,CAAnC;AAAA,mBAFZ,CAAJ;AAAA,iBAV+B,EActCO,IAdsC,CAcjC,UAAAlB,GAAG;AAAA,yBAAIA,GAAG,CAACE,UAAJ,CAAeA,UAAf,EACR3B,IADQ,CACH,GADG,EACE,UAAA8B,CAAC;AAAA,2BAAII,CAAC,CAACJ,CAAC,CAACpB,IAAH,CAAL;AAAA,mBADH,EAERV,IAFQ,CAEH,OAFG,EAEM,UAAA8B,CAAC;AAAA,2BAAIM,CAAC,CAACN,CAAC,CAACnB,KAAH,CAAD,GAAayB,CAAC,CAAC,CAAD,CAAlB;AAAA,mBAFP,CAAJ;AAAA,iBAd8B,CAApC;AAAA,eAAP;AAiBH,aAzHL;;AAkEa5B,YAAAA,MAlEb,oBAkEoBZ,GAlEpB,EAkEyB;AACjB,kBAAIgD,KAAK,GAAGhD,GAAG,CAACG,MAAJ,CAAW,GAAX,EACP8C,KADO,CACD,MADC,EACO,6BADP,EAEPA,KAFO,CAED,sBAFC,EAEuB,cAFvB,EAGP7C,IAHO,CAGF,aAHE,EAGa,KAHb,EAIP0B,SAJO,CAIG,MAJH,CAAZ;AAMA,qBAAO,iBAAeC,UAAf;AAAA;AAAA,oBAAEC,IAAF;AAAA,oBAAQzB,IAAR;;AAAA,uBAA8ByC,KAAK,GAAGA,KAAK,CAC7CzC,IADwC,CACnCA,IAAI,CAAC0B,KAAL,CAAW,CAAX,EAAcL,CAAd,CADmC,EACjB,UAAAM,CAAC;AAAA,yBAAIA,CAAC,CAACf,OAAN;AAAA,iBADgB,EAExCgB,IAFwC,CAGrC,UAAAC,KAAK;AAAA,yBAAIA,KAAK,CAACjC,MAAN,CAAa,MAAb,EACJC,IADI,CACC,WADD,EACc,UAAA8B,CAAC;AAAA,+CAAiBM,CAAC,CAAC,CAACC,IAAI,CAACC,GAAL,CAASR,CAAT,KAAeA,CAAhB,EAAmBnB,KAApB,CAAlB,cAAgDuB,CAAC,CAAC,CAACG,IAAI,CAACC,GAAL,CAASR,CAAT,KAAeA,CAAhB,EAAmBpB,IAApB,CAAjD;AAAA,mBADf,EAEJV,IAFI,CAEC,GAFD,EAEMkC,CAAC,CAACC,SAAF,KAAgB,CAFtB,EAGJnC,IAHI,CAGC,GAHD,EAGM,CAAC,CAHP,EAIJA,IAJI,CAIC,IAJD,EAIO,SAJP,EAKJA,IALI,CAKC,WALD,EAKc,KALd,EAMJ8C,IANI,CAMC,UAAAhB,CAAC;AAAA,2BAAIA,CAAC,CAACf,OAAN;AAAA,mBANF,EAOJ4B,IAPI,CAOC,UAAAG,IAAI;AAAA,2BAAIA,IAAI,CAAC/C,MAAL,CAAY,OAAZ,EACTC,IADS,CACJ,cADI,EACY,GADZ,EAETA,IAFS,CAEJ,aAFI,EAEW,QAFX,EAGTA,IAHS,CAGJ,WAHI,EAGS,KAHT,EAITA,IAJS,CAIJ,GAJI,EAIC,CAAC,CAJF,EAKTA,IALS,CAKJ,IALI,EAKE,QALF,CAAJ;AAAA,mBAPL,CAAJ;AAAA,iBAHgC,EAgBrC,UAAAuC,MAAM;AAAA,yBAAIA,MAAJ;AAAA,iBAhB+B,EAiBrC,UAAAC,IAAI;AAAA,yBAAIA,IAAI,CAACb,UAAL,CAAgBA,UAAhB,EAA4Bc,MAA5B,GACHzC,IADG,CACE,WADF,EACe,UAAA8B,CAAC;AAAA,+CAAiBM,CAAC,CAAC,CAACM,IAAI,CAACJ,GAAL,CAASR,CAAT,KAAeA,CAAhB,EAAmBnB,KAApB,CAAlB,cAAgDuB,CAAC,CAAC,CAACQ,IAAI,CAACJ,GAAL,CAASR,CAAT,KAAeA,CAAhB,EAAmBpB,IAApB,CAAjD;AAAA,mBADhB,EAEHiC,IAFG,CAEE,UAAAI,CAAC;AAAA,2BAAIA,CAAC,CAACjD,MAAF,CAAS,OAAT,EAAkBkD,KAAlB,CAAwB,MAAxB,EAAgC,UAAAlB,CAAC;AAAA,6BAAIvB,SAAS,CAACuB,CAAC,CAACnB,KAAH,EAAU,CAAC+B,IAAI,CAACJ,GAAL,CAASR,CAAT,KAAeA,CAAhB,EAAmBnB,KAA7B,CAAb;AAAA,qBAAjC,CAAJ;AAAA,mBAFH,CAAJ;AAAA,iBAjBiC,EAqBxCgC,IArBwC,CAqBnC,UAAAlB,GAAG;AAAA,yBAAIA,GAAG,CAACE,UAAJ,CAAeA,UAAf,EACR3B,IADQ,CACH,WADG,EACU,UAAA8B,CAAC;AAAA,+CAAiBM,CAAC,CAACN,CAAC,CAACnB,KAAH,CAAlB,cAA+BuB,CAAC,CAACJ,CAAC,CAACpB,IAAH,CAAhC;AAAA,mBADX,EAERiC,IAFQ,CAEH,UAAAI,CAAC;AAAA,2BAAIA,CAAC,CAACjD,MAAF,CAAS,OAAT,EAAkBkD,KAAlB,CAAwB,MAAxB,EAAgC,UAAAlB,CAAC;AAAA,6BAAIvB,SAAS,CAAC,CAAC8B,IAAI,CAACC,GAAL,CAASR,CAAT,KAAeA,CAAhB,EAAmBnB,KAApB,EAA2BmB,CAAC,CAACnB,KAA7B,CAAb;AAAA,qBAAjC,CAAJ;AAAA,mBAFE,CAAJ;AAAA,iBArBgC,CAAtC;AAAA,eAAP;AAwBH,aAjGL;;AA2DaJ,YAAAA,SA3Db,uBA2DuBU,CA3DvB,EA2D0BC,CA3D1B,EA2D6B;AACrB,kBAAME,CAAC,GAAGvB,EAAE,CAACoD,iBAAH,CAAqBhC,CAArB,EAAwBC,CAAxB,CAAV;AACA,qBAAO,UAAUgC,CAAV,EAAa;AAChB,qBAAKC,WAAL,GAAmBC,YAAY,CAAChC,CAAC,CAAC8B,CAAD,CAAF,CAA/B;AACH,eAFD;AAGH,aAhEL;;AA0Ca5C,YAAAA,IA1Cb,kBA0CkBV,GA1ClB,EA0CuB;AACf,kBAAMmD,CAAC,GAAGnD,GAAG,CAACG,MAAJ,CAAW,GAAX,EACLC,IADK,CACA,WADA,wBAC4BqD,MAAM,CAACC,GADnC,OAAV;AAGA,kBAAMhD,IAAI,GAAGT,EAAE,CAAC0D,OAAH,CAAWnB,CAAX,EACRoB,KADQ,CACF/D,KAAK,GAAG,GADN,EAERgE,aAFQ,CAEM,CAFN,EAGRC,aAHQ,CAGM,CAACC,OAAD,IAAYnC,CAAC,GAAGU,CAAC,CAAC0B,OAAF,EAAhB,CAHN,CAAb;AAKA,qBAAO,UAACC,CAAD,EAAIlC,UAAJ,EAAmB;AACtBoB,gBAAAA,CAAC,CAACpB,UAAF,CAAaA,UAAb,EAAyBgB,IAAzB,CAA8BrC,IAA9B;AACAyC,gBAAAA,CAAC,CAACjD,MAAF,CAAS,0BAAT,EAAqC2C,MAArC;AACAM,gBAAAA,CAAC,CAACrB,SAAF,CAAY,gCAAZ,EAA8C1B,IAA9C,CAAmD,QAAnD,EAA6D,OAA7D;AACA+C,gBAAAA,CAAC,CAACjD,MAAF,CAAS,SAAT,EAAoB2C,MAApB;AACH,eALD;AAMH,aAzDL;;AA0BapC,YAAAA,MA1Bb,oBA0BoBT,GA1BpB,EA0ByB;AACjB,kBAAMkE,GAAG,GAAGlE,GAAG,CAACG,MAAJ,CAAW,MAAX,EACP8C,KADO,CACD,MADC,iBACec,OADf,2BAEPd,KAFO,CAED,sBAFC,EAEuB,cAFvB,EAGPA,KAHO,CAGD,WAHC,EAGY,MAHZ,EAIP7C,IAJO,CAIF,aAJE,EAIa,KAJb,EAKPA,IALO,CAKF,GALE,EAKGP,KAAK,GAAG,CALX,EAMPO,IANO,CAMF,GANE,EAMGqD,MAAM,CAACC,GAAP,GAAaK,OAAO,IAAInC,CAAC,GAAG,IAAR,CANvB,EAOPxB,IAPO,CAOF,IAPE,EAOI,QAPJ,EAQP8C,IARO,CAQFiB,UAAU,CAACC,SAAS,CAAC,CAAD,CAAT,CAAa,CAAb,CAAD,CARR,CAAZ;AAUA,qBAAO,gBAASrC,UAAT,EAAwB;AAAA;AAAA,oBAAtBC,IAAsB;;AAC3BD,gBAAAA,UAAU,CAACsC,GAAX,GAAiB/D,IAAjB,CAAsB;AAAA,yBAAM4D,GAAG,CAAChB,IAAJ,CAASiB,UAAU,CAACnC,IAAD,CAAnB,CAAN;AAAA,iBAAtB;AACH,eAFD;AAGH,aAxCL;;AACQ+B,YAAAA,OADR,GACkB,EADlB;AAGQN,YAAAA,MAHR,GAGkB;AAAEC,cAAAA,GAAG,EAAE,EAAP;AAAWY,cAAAA,KAAK,EAAE,CAAlB;AAAqBC,cAAAA,MAAM,EAAE,CAA7B;AAAgCC,cAAAA,IAAI,EAAE;AAAtC,aAHlB;AAKQ5C,YAAAA,CALR,GAKY,EALZ;AAMQ6C,YAAAA,QANR,GAMmB,EANnB;AAQQnC,YAAAA,CARR,GAQYrC,EAAE,CAACyE,SAAH,GACHC,MADG,CACI1E,EAAE,CAAC2E,KAAH,CAAShD,CAAC,GAAG,CAAb,CADJ,EAEHiD,UAFG,CAEQ,CAACpB,MAAM,CAACC,GAAR,EAAaD,MAAM,CAACC,GAAP,GAAaK,OAAO,IAAInC,CAAC,GAAG,CAAJ,GAAQ,GAAZ,CAAjC,CAFR,EAGHoC,OAHG,CAGK,GAHL,CARZ;AAcQxB,YAAAA,CAdR,GAcYvC,EAAE,CAAC6E,WAAH,CAAe,CAAC,CAAD,EAAI,CAAJ,CAAf,EAAuB,CAACrB,MAAM,CAACe,IAAR,EAAc3E,KAAK,GAAG4D,MAAM,CAACa,KAA7B,CAAvB,CAdZ;AAgBQS,YAAAA,QAhBR,GAgBmB9E,EAAE,CAAC+E,KAAH,CAASzE,IAAT,EAAe,UAAA2B,CAAC;AAAA,qBAAIA,CAAC,CAACf,OAAN;AAAA,aAAhB,CAhBnB;AAkBQ8D,YAAAA,YAlBR,GAkBuBjE,KAAK,CAACC,IAAN,CAAW8D,QAAQ,CAACG,IAAT,EAAX,CAlBvB;AAmBQ7C,YAAAA,KAnBR,GAmBgBpC,EAAE,CAACkF,YAAH,GACPP,KADO,CACD3E,EAAE,CAACmF,eADF,EAEPT,MAFO,CAEAM,YAFA,CAnBhB;AAuBQd,YAAAA,UAvBR,GAuBqBlE,EAAE,CAACoF,SAAH,CAAa,WAAb,CAvBrB;AAwBQ7B,YAAAA,YAxBR,GAwBuBvD,EAAE,CAACqF,MAAH,CAAU,IAAV,CAxBvB;AA2HQC,YAAAA,CA3HR,GA2HY,EA3HZ;AA6HQrE,YAAAA,KA7HR,GA6HgB,IAAIsE,GAAJ,CAAQjF,IAAI,CAACkF,GAAL,CAAS,UAAAvD,CAAC;AAAA,qBAAIA,CAAC,CAACf,OAAN;AAAA,aAAV,CAAR,CA7HhB;AAuIQuE,YAAAA,UAvIR,GAuIqB1E,KAAK,CAACC,IAAN,CAAWhB,EAAE,CAAC0F,MAAH,CAAUpF,IAAV,EAAgB;AAAA;AAAA,kBAAE2B,CAAF;;AAAA,qBAASA,CAAC,CAACnB,KAAX;AAAA,aAAhB,EAAkC,UAAAmB,CAAC;AAAA,qBAAIA,CAAC,CAACF,IAAN;AAAA,aAAnC,EAA+C,UAAAE,CAAC;AAAA,qBAAIA,CAAC,CAACf,OAAN;AAAA,aAAhD,CAAX,EACZsE,GADY,CACR;AAAA;AAAA,kBAAEzD,IAAF;AAAA,kBAAQzB,IAAR;;AAAA,qBAAkB,CAAC,IAAIqF,IAAJ,CAAS5D,IAAT,CAAD,EAAiBzB,IAAjB,CAAlB;AAAA,aADQ,EAEZa,IAFY,CAEP;AAAA;AAAA,kBAAEC,CAAF;;AAAA;AAAA,kBAAOC,CAAP;;AAAA,qBAAcrB,EAAE,CAAC4F,SAAH,CAAaxE,CAAb,EAAgBC,CAAhB,CAAd;AAAA,aAFO,CAvIrB;AA4IU8C,YAAAA,SA5IV,GA4IsB,EA5ItB;AAAA,mDA8I+BnE,EAAE,CAAC6F,KAAH,CAASJ,UAAT,CA9I/B;;AAAA;AA8II,kEAAiD;AAAA;AAAA;AAA1CK,gBAAAA,EAA0C;AAAtC1E,gBAAAA,CAAsC;AAAA;AAAjC2E,gBAAAA,EAAiC;AAA7B1E,gBAAAA,CAA6B;;AAAA,uCACpCE,CADoC;AAEzC,sBAAM8B,CAAC,GAAG9B,CAAC,GAAG+D,CAAd;AACAnB,kBAAAA,SAAS,CAAC6B,IAAV,CAAe,CACX,IAAIL,IAAJ,CAASG,EAAE,IAAI,IAAIzC,CAAR,CAAF,GAAe0C,EAAE,GAAG1C,CAA7B,CADW,EAEXxC,IAAI,CAAC,UAAAK,OAAO;AAAA,2BAAI,CAACE,CAAC,CAACqB,GAAF,CAAMvB,OAAN,KAAkB,CAAnB,KAAyB,IAAImC,CAA7B,IAAkC,CAAChC,CAAC,CAACoB,GAAF,CAAMvB,OAAN,KAAkB,CAAnB,IAAwBmC,CAA9D;AAAA,mBAAR,CAFO,CAAf;AAHyC;;AAC7C,qBAAS9B,CAAT,GAAa,CAAb,EAAgBA,CAAC,GAAG+D,CAApB,EAAuB,EAAE/D,CAAzB,EAA4B;AAAA,wBAAnBA,CAAmB;AAM3B;AACJ;AAtJL;AAAA;AAAA;AAAA;AAAA;;AAuJI4C,YAAAA,SAAS,CAAC6B,IAAV,CAAe,CAAC,IAAIL,IAAJ,CAASI,EAAT,CAAD,EAAelF,IAAI,CAAC,UAAAK,OAAO;AAAA,qBAAIG,CAAC,CAACoB,GAAF,CAAMvB,OAAN,KAAkB,CAAtB;AAAA,aAAR,CAAnB,CAAf,EAvJJ,CAwJI;;AAEI+E,YAAAA,UA1JR,GA0JqBjG,EAAE,CAACkG,MAAH,CAAU/B,SAAS,CAACgC,OAAV,CAAkB;AAAA;AAAA,kBAAI7F,IAAJ;;AAAA,qBAAcA,IAAd;AAAA,aAAlB,CAAV,EAAiD,UAAA2B,CAAC;AAAA,qBAAIA,CAAC,CAACf,OAAN;AAAA,aAAlD,CA1JrB;AA4JQ2B,YAAAA,IA5JR,GA4Je,IAAIuD,GAAJ,CAAQH,UAAU,CAACE,OAAX,CAAmB;AAAA;AAAA,kBAAI7F,IAAJ;;AAAA,qBAAcN,EAAE,CAAC6F,KAAH,CAASvF,IAAT,CAAd;AAAA,aAAnB,CAAR,CA5Jf;AA8JQkC,YAAAA,IA9JR,GA8Je,IAAI4D,GAAJ,CAAQH,UAAU,CAACE,OAAX,CAAmB;AAAA;AAAA,kBAAI7F,IAAJ;;AAAA,qBAAcN,EAAE,CAAC6F,KAAH,CAASvF,IAAT,EAAe,UAACc,CAAD,EAAIC,CAAJ;AAAA,uBAAU,CAACA,CAAD,EAAID,CAAJ,CAAV;AAAA,eAAf,CAAd;AAAA,aAAnB,CAAR,CA9Jf;AAgKIiF,YAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AAEMC,YAAAA,UAlKV,GAkKuB3F,IAAI,CAACb,GAAD,CAlK3B;AAmKUyG,YAAAA,UAnKV,GAmKuB/F,IAAI,CAACV,GAAD,CAnK3B;AAoKU0G,YAAAA,YApKV,GAoKyB9F,MAAM,CAACZ,GAAD,CApK/B;AAqKU2G,YAAAA,YArKV,GAqKyBlG,MAAM,CAACT,GAAD,CArK/B,EAuKI;;AAvKJ;AAAA,mBAyKUA,GAAG,CAAC4G,IAAJ,EAzKV;;AAAA;AAAA,kCA2K2BxC,SA3K3B;;AAAA;AAAA;AAAA;AAAA;AAAA;;AA2KeyC,YAAAA,QA3Kf;AA4Kc9E,YAAAA,UA5Kd,GA4K2B/B,GAAG,CAAC+B,UAAJ,GACd0C,QADc,CACLA,QADK,EAEdqC,IAFc,CAET7G,EAAE,CAAC8G,UAFM,CA5K3B,EAiLQ;;AACAvE,YAAAA,CAAC,CAACmC,MAAF,CAAS,CAAC,CAAD,EAAIkC,QAAQ,CAAC,CAAD,CAAR,CAAY,CAAZ,EAAe9F,KAAnB,CAAT;AAEA0F,YAAAA,UAAU,CAACI,QAAD,EAAW9E,UAAX,CAAV;AACAyE,YAAAA,UAAU,CAACK,QAAD,EAAW9E,UAAX,CAAV;AACA2E,YAAAA,YAAY,CAACG,QAAD,EAAW9E,UAAX,CAAZ;AACA4E,YAAAA,YAAY,CAACE,QAAD,EAAW9E,UAAX,CAAZ,CAvLR,CAyLQ;;AAzLR;AAAA,mBA0LcA,UAAU,CAACsC,GAAX,EA1Ld;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","file":"bar-chart.e5b881af.js","sourceRoot":"../src","sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","require(\"regenerator-runtime/runtime\");\nconst width = 975;\nconst height = 610;\nconst myDataLocation = require('../static/updated_rates.csv');\n\nlet svg = d3.select(\"#trial\")\n    .append(\"svg\")\n    .attr(\"viewBox\", [0, 0, width, height]);\n\nd3.csv(myDataLocation)\n    .then(function (data) {\n        createChart(data);\n    });\n\nasync function createChart(data) {\n    let barSize = 28;\n\n    let margin = ({ top: 16, right: 6, bottom: 6, left: 0 });\n\n    let n = 13;\n    let duration = 45;\n\n    let y = d3.scaleBand()\n        .domain(d3.range(n + 1))\n        .rangeRound([margin.top, margin.top + barSize * (n + 1 + 0.1)])\n        .padding(0.1);\n\n\n    let x = d3.scaleLinear([0, 1], [margin.left, width - margin.right]);\n\n    let mapThing = d3.group(data, d => d.country);\n\n    let countryArray = Array.from(mapThing.keys());\n    var color = d3.scaleOrdinal()\n        .range(d3.schemeTableau10)\n        .domain(countryArray)\n\n    let formatDate = d3.utcFormat(\"%B %d, %Y\");\n    let formatNumber = d3.format(\",d\");\n\n    function ticker(svg) {\n        const now = svg.append(\"text\")\n            .style(\"font\", `bold ${barSize}px var(--sans-serif)`)\n            .style(\"font-variant-numeric\", \"tabular-nums\")\n            .style(\"font-size\", \"30pt\")\n            .attr(\"text-anchor\", \"end\")\n            .attr(\"x\", width - 6)\n            .attr(\"y\", margin.top + barSize * (n - 0.45))\n            .attr(\"dy\", \"0.32em\")\n            .text(formatDate(keyframes[0][0]));\n\n        return ([date], transition) => {\n            transition.end().then(() => now.text(formatDate(date)));\n        };\n    }\n\n    function axis(svg) {\n        const g = svg.append(\"g\")\n            .attr(\"transform\", `translate(0,${margin.top})`);\n\n        const axis = d3.axisTop(x)\n            .ticks(width / 160)\n            .tickSizeOuter(0)\n            .tickSizeInner(-barSize * (n + y.padding()));\n\n        return (_, transition) => {\n            g.transition(transition).call(axis);\n            g.select(\".tick:first-of-type text\").remove();\n            g.selectAll(\".tick:not(:first-of-type) line\").attr(\"stroke\", \"white\");\n            g.select(\".domain\").remove();\n        };\n    }\n\n    function textTween(a, b) {\n        const i = d3.interpolateNumber(a, b);\n        return function (t) {\n            this.textContent = formatNumber(i(t));\n        };\n    }\n\n    function labels(svg) {\n        let label = svg.append(\"g\")\n            .style(\"font\", \"bold 12px var(--sans-serif)\")\n            .style(\"font-variant-numeric\", \"tabular-nums\")\n            .attr(\"text-anchor\", \"end\")\n            .selectAll(\"text\");\n\n        return ([date, data], transition) => label = label\n            .data(data.slice(0, n), d => d.country)\n            .join(\n                enter => enter.append(\"text\")\n                    .attr(\"transform\", d => `translate(${x((prev.get(d) || d).value)},${y((prev.get(d) || d).rank)})`)\n                    .attr(\"y\", y.bandwidth() / 2)\n                    .attr(\"x\", -6)\n                    .attr(\"dy\", \"-0.25em\")\n                    .attr(\"font-size\", \"8px\")\n                    .text(d => d.country)\n                    .call(text => text.append(\"tspan\")\n                        .attr(\"fill-opacity\", 0.7)\n                        .attr(\"font-weight\", \"normal\")\n                        .attr(\"font-size\", \"8px\")\n                        .attr(\"x\", -6)\n                        .attr(\"dy\", \"1.15em\")),\n                update => update,\n                exit => exit.transition(transition).remove()\n                    .attr(\"transform\", d => `translate(${x((next.get(d) || d).value)},${y((next.get(d) || d).rank)})`)\n                    .call(g => g.select(\"tspan\").tween(\"text\", d => textTween(d.value, (next.get(d) || d).value)))\n            )\n            .call(bar => bar.transition(transition)\n                .attr(\"transform\", d => `translate(${x(d.value)},${y(d.rank)})`)\n                .call(g => g.select(\"tspan\").tween(\"text\", d => textTween((prev.get(d) || d).value, d.value))));\n    }\n\n    function bars(svg) {\n        let bar = svg.append(\"g\")\n            .attr(\"fill-opacity\", 0.6)\n            .selectAll(\"rect\");\n\n        return ([date, data], transition) => bar = bar\n            .data(data.slice(0, n), d => d.country)\n            .join(\n                enter => enter.append(\"rect\")\n                    .attr(\"fill\", d => color(d.country))\n                    .attr(\"height\", y.bandwidth())\n                    .attr(\"x\", x(0))\n                    .attr(\"y\", d => y((prev.get(d) || d).rank))\n                    .attr(\"width\", d => x((prev.get(d) || d).value) - x(0)),\n                update => update,\n                exit => exit.transition(transition).remove()\n                    .attr(\"y\", d => y((next.get(d) || d).rank))\n                    .attr(\"width\", d => x((next.get(d) || d).value) - x(0))\n            )\n            .call(bar => bar.transition(transition)\n                .attr(\"y\", d => y(d.rank))\n                .attr(\"width\", d => x(d.value) - x(0)));\n    }\n\n    let k = 20\n\n    let names = new Set(data.map(d => d.country));\n\n    function rank(value) {\n        const data = Array.from(names, country => ({ country, value: value(country) }));\n        data.sort((a, b) => d3.descending(a.value, b.value));\n        for (let i = 0; i < data.length; ++i) data[i].rank = Math.min(n, i);\n        return data;\n    }\n\n\n    let datevalues = Array.from(d3.rollup(data, ([d]) => d.value, d => d.date, d => d.country))\n        .map(([date, data]) => [new Date(date), data])\n        .sort(([a], [b]) => d3.ascending(a, b))\n\n\n    const keyframes = [];\n    let ka, a, kb, b;\n    for ([[ka, a], [kb, b]] of d3.pairs(datevalues)) {\n        for (let i = 0; i < k; ++i) {\n            const t = i / k;\n            keyframes.push([\n                new Date(ka * (1 - t) + kb * t),\n                rank(country => (a.get(country) || 0) * (1 - t) + (b.get(country) || 0) * t)\n            ]);\n        }\n    }\n    keyframes.push([new Date(kb), rank(country => b.get(country) || 0)]);\n    // return keyframes;\n\n    let nameframes = d3.groups(keyframes.flatMap(([, data]) => data), d => d.country);\n\n    let next = new Map(nameframes.flatMap(([, data]) => d3.pairs(data)));\n\n    let prev = new Map(nameframes.flatMap(([, data]) => d3.pairs(data, (a, b) => [b, a])));\n\n    console.log(\"charizard these mofos\");\n\n    const updateBars = bars(svg);\n    const updateAxis = axis(svg);\n    const updateLabels = labels(svg);\n    const updateTicker = ticker(svg);\n\n    // console.log(svg.node());\n\n    await svg.node();\n\n    for (const keyframe of keyframes) {\n        const transition = svg.transition()\n            .duration(duration)\n            .ease(d3.easeLinear)\n\n\n        // Extract the top bar’s value.\n        x.domain([0, keyframe[1][0].value]);\n\n        updateAxis(keyframe, transition);\n        updateBars(keyframe, transition);\n        updateLabels(keyframe, transition);\n        updateTicker(keyframe, transition);\n\n        // invalidation.then(() => svg.interrupt());\n        await transition.end();\n    }\n}"]}